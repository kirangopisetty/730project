{
	"info": {
		"_postman_id": "a1534c2b-f9ea-470e-97d8-23ea057b2ae0",
		"name": "REST APIs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5040522"
	},
	"item": [
		{
			"name": "POSITIVE TC",
			"item": [
				{
					"name": "LIST USERS-PAGE#2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify if response code is 200\", function () {\r",
									"        pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response description is OK\", function () {\r",
									"        pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if Content-Type=application/json; charset=utf-8\", function () {\r",
									"        pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response time < 400ms\", function () {\r",
									"        pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is present\", function () {\r",
									"        pm.response.to.have.body();\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body contains mandatory fields\", function () {\r",
									"        pm.expect(pm.response.text()).to.include(\"page\");\r",
									"        pm.expect(pm.response.text()).to.include(\"id\");\r",
									"        pm.expect(pm.response.text()).to.include(\"email\");\r",
									"        pm.expect(pm.response.text()).to.include(\"first_name\");\r",
									"        pm.expect(pm.response.text()).to.include(\"last_name\");\r",
									"        pm.expect(pm.response.text()).to.include(\"avatar\");\r",
									"        pm.expect(pm.response.text()).to.include(\"Lindsay\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://reqres.in/api/users?page=2",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST USERS-PAGE#1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify if response code is 200\", function () {\r",
									"        pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response description is OK\", function () {\r",
									"        pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if Content-Type=application/json; charset=utf-8\", function () {\r",
									"        pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response time < 400ms\", function () {\r",
									"        pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is present\", function () {\r",
									"        pm.response.to.have.body();\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body contains mandatory fields\", function () {\r",
									"        pm.expect(pm.response.text()).to.include(\"page\");\r",
									"        pm.expect(pm.response.text()).to.include(\"id\");\r",
									"        pm.expect(pm.response.text()).to.include(\"email\");\r",
									"        pm.expect(pm.response.text()).to.include(\"first_name\");\r",
									"        pm.expect(pm.response.text()).to.include(\"last_name\");\r",
									"        pm.expect(pm.response.text()).to.include(\"avatar\");\r",
									"        pm.expect(pm.response.text()).to.include(\"George\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://reqres.in/api/users?page=1",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SINGLE USER",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify if response code is 200\", function () {\r",
									"        pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response description is OK\", function () {\r",
									"        pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if Content-Type=application/json; charset=utf-8\", function () {\r",
									"        pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response time < 400ms\", function () {\r",
									"        pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is present\", function () {\r",
									"        pm.response.to.have.body();\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body contains mandatory fields\", function () {\r",
									"        pm.expect(pm.response.text()).to.include(\"2\");\r",
									"        pm.expect(pm.response.text()).to.include(\"id\");\r",
									"        pm.expect(pm.response.text()).to.include(\"email\");\r",
									"        pm.expect(pm.response.text()).to.include(\"first_name\");\r",
									"        pm.expect(pm.response.text()).to.include(\"last_name\");\r",
									"        pm.expect(pm.response.text()).to.include(\"avatar\");\r",
									"        pm.expect(pm.response.text()).to.include(\"Janet\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://reqres.in/api/users/2",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "SINGLE USER NOT FOUND",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify if response code is 404\", function () {\r",
									"        pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response description is Not Found\", function () {\r",
									"        pm.response.to.have.status(\"Not Found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://reqres.in/api/users/23",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"23"
							]
						}
					},
					"response": []
				},
				{
					"name": "CREATE USER",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify if response code is 201\", function () {\r",
									"        pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response description is Created\", function () {\r",
									"        pm.response.to.have.status(\"Created\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if Content-Type=application/json; charset=utf-8\", function () {\r",
									"        pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response time < 400ms\", function () {\r",
									"        pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is present\", function () {\r",
									"        pm.response.to.have.body();\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body contains mandatory fields\", function () {\r",
									"        pm.expect(pm.response.text()).to.include(\"id\");\r",
									"        pm.expect(pm.response.text()).to.include(\"name\");\r",
									"        pm.expect(pm.response.text()).to.include(\"job\");\r",
									"        pm.expect(pm.response.text()).to.include(\"createdAt\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Pavitra\",\r\n    \"job\": \"Test Engineer\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "UPDATE USER",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify if response code is 200\", function () {\r",
									"        pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response description is OK\", function () {\r",
									"        pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if Content-Type=application/json; charset=utf-8\", function () {\r",
									"        pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response time < 400ms\", function () {\r",
									"        pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is present\", function () {\r",
									"        pm.response.to.have.body();\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body contains mandatory fields\", function () {\r",
									"        pm.expect(pm.response.text()).to.include(\"name\");\r",
									"        pm.expect(pm.response.text()).to.include(\"job\");\r",
									"        pm.expect(pm.response.text()).to.include(\"updatedAt\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Pavitra M\",\r\n    \"job\": \"Sr.Test Engineer\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users/157",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"157"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE USER",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify if response code is 204\", function () {\r",
									"        pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response description is No Content\", function () {\r",
									"        pm.response.to.have.status(\"No Content\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response time < 400ms\", function () {\r",
									"        pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is not present\", function () {\r",
									"        pm.response.to.not.have.body();\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://reqres.in/api/users/157",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"157"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "FUZZ DDT",
			"item": [
				{
					"name": "SINGLE USER NOT FOUND",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify if response code is 404\", function () {\r",
									"        pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response description is Not Found\", function () {\r",
									"        pm.response.to.have.status(\"Not Found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://reqres.in/api/users/{{$randomInt}}",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"{{$randomInt}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "CREATE USER",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify if response code is 201\", function () {\r",
									"        pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response description is Created\", function () {\r",
									"        pm.response.to.have.status(\"Created\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if Content-Type=application/json; charset=utf-8\", function () {\r",
									"        pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response time < 400ms\", function () {\r",
									"        pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is present\", function () {\r",
									"        pm.response.to.have.body();\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body contains mandatory fields\", function () {\r",
									"        pm.expect(pm.response.text()).to.include(\"id\");\r",
									"        pm.expect(pm.response.text()).to.include(\"name\");\r",
									"        pm.expect(pm.response.text()).to.include(\"job\");\r",
									"        pm.expect(pm.response.text()).to.include(\"createdAt\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomFullName}}\",\r\n    \"job\": \"{{$randomJobTitle}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "UPDATE USER",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify if response code is 200\", function () {\r",
									"        pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response description is OK\", function () {\r",
									"        pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if Content-Type=application/json; charset=utf-8\", function () {\r",
									"        pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response time < 400ms\", function () {\r",
									"        pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is present\", function () {\r",
									"        pm.response.to.have.body();\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body contains mandatory fields\", function () {\r",
									"        pm.expect(pm.response.text()).to.include(\"name\");\r",
									"        pm.expect(pm.response.text()).to.include(\"job\");\r",
									"        pm.expect(pm.response.text()).to.include(\"updatedAt\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$randomNamePrefix}}{{$randomFirstName}}\",\r\n    \"job\": \"{{$randomJobDescriptor}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users/157",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"157"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE USER",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify if response code is 204\", function () {\r",
									"        pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response description is No Content\", function () {\r",
									"        pm.response.to.have.status(\"No Content\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response time < 400ms\", function () {\r",
									"        pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is not present\", function () {\r",
									"        pm.response.to.not.have.body();\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://reqres.in/api/users/{{$randomInt}}",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"{{$randomInt}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "API CHAINING",
			"item": [
				{
					"name": "LIST USERS-PAGE#1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify if response code is 200\", function () {\r",
									"        pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response description is OK\", function () {\r",
									"        pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if Content-Type=application/json; charset=utf-8\", function () {\r",
									"        pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response time < 400ms\", function () {\r",
									"        pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is present\", function () {\r",
									"        pm.response.to.have.body();\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body contains mandatory fields\", function () {\r",
									"        pm.expect(pm.response.text()).to.include(\"page\");\r",
									"        pm.expect(pm.response.text()).to.include(\"id\");\r",
									"        pm.expect(pm.response.text()).to.include(\"email\");\r",
									"        pm.expect(pm.response.text()).to.include(\"first_name\");\r",
									"        pm.expect(pm.response.text()).to.include(\"last_name\");\r",
									"        pm.expect(pm.response.text()).to.include(\"avatar\");\r",
									"        pm.expect(pm.response.text()).to.include(\"George\");\r",
									"});\r",
									"\r",
									"var extractedResponse = JSON.parse(responseBody)\r",
									"var extractedName = extractedResponse.data[4].first_name\r",
									"pm.globals.set(\"globalExtractedName\", extractedName);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://reqres.in/api/users?page=1",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CREATE USER",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify if response code is 201\", function () {\r",
									"        pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response description is Created\", function () {\r",
									"        pm.response.to.have.status(\"Created\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if Content-Type=application/json; charset=utf-8\", function () {\r",
									"        pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response time < 400ms\", function () {\r",
									"        pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is present\", function () {\r",
									"        pm.response.to.have.body();\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body contains mandatory fields\", function () {\r",
									"        pm.expect(pm.response.text()).to.include(\"id\");\r",
									"        pm.expect(pm.response.text()).to.include(\"name\");\r",
									"        pm.expect(pm.response.text()).to.include(\"job\");\r",
									"        pm.expect(pm.response.text()).to.include(\"createdAt\");\r",
									"});\r",
									"\r",
									"var extractedResponse = JSON.parse(responseBody);\r",
									"var extractedID = extractedResponse.id\r",
									"pm.globals.set(\"globalExtractedID\", extractedID);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{globalExtractedName}}\",\r\n    \"job\": \"Test Engineer\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "UPDATE USER",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify if response code is 200\", function () {\r",
									"        pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response description is OK\", function () {\r",
									"        pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if Content-Type=application/json; charset=utf-8\", function () {\r",
									"        pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response time < 400ms\", function () {\r",
									"        pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is present\", function () {\r",
									"        pm.response.to.have.body();\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body contains mandatory fields\", function () {\r",
									"        pm.expect(pm.response.text()).to.include(\"name\");\r",
									"        pm.expect(pm.response.text()).to.include(\"job\");\r",
									"        pm.expect(pm.response.text()).to.include(\"updatedAt\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{globalExtractedName}}\",\r\n    \"job\": \"Sr.Test Engineer\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users/{{globalExtractedID}}",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"{{globalExtractedID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE USER",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Verify if response code is 204\", function () {\r",
									"        pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response description is No Content\", function () {\r",
									"        pm.response.to.have.status(\"No Content\");\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response time < 400ms\", function () {\r",
									"        pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify if response body is not present\", function () {\r",
									"        pm.response.to.not.have.body();\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://reqres.in/api/users/{{globalExtractedID}}",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"{{globalExtractedID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "NEGATIVE TC",
			"item": [
				{
					"name": "HTTP METHOD TAMPERING",
					"item": [
						{
							"name": "LIST USERS",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if the response code is 405\", function () {\r",
											"        pm.response.to.have.status(405);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://reqres.in/api/users?page=2",
									"protocol": "https",
									"host": [
										"reqres",
										"in"
									],
									"path": [
										"api",
										"users"
									],
									"query": [
										{
											"key": "page",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "SINGLE USER",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if the response code is 405\", function () {\r",
											"        pm.response.to.have.status(405);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "https://reqres.in/api/users/2",
									"protocol": "https",
									"host": [
										"reqres",
										"in"
									],
									"path": [
										"api",
										"users",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "CREATE USER",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if the response code is 405\", function () {\r",
											"        pm.response.to.have.status(405);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"leader\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://reqres.in/api/users",
									"protocol": "https",
									"host": [
										"reqres",
										"in"
									],
									"path": [
										"api",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "UPDATE USER",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if the response code is 405\", function () {\r",
											"        pm.response.to.have.status(405);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"zion resident\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://reqres.in/api/users/2",
									"protocol": "https",
									"host": [
										"reqres",
										"in"
									],
									"path": [
										"api",
										"users",
										"2"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "PAYLOAD TAMPERING",
					"item": [
						{
							"name": "CREATE USER-JOB EMPTY",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if the response code is 400\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Pavitra\",\r\n    \"job\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://reqres.in/api/users",
									"protocol": "https",
									"host": [
										"reqres",
										"in"
									],
									"path": [
										"api",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "CREATE USER-NAME EMPTY",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if the response code is 400\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"\",\r\n    \"job\": \"Student\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://reqres.in/api/users",
									"protocol": "https",
									"host": [
										"reqres",
										"in"
									],
									"path": [
										"api",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "CREATE USER-NAME & JOB EMPTY",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if the response code is 400\", function () {\r",
											"        pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"\",\r\n    \"job\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://reqres.in/api/users",
									"protocol": "https",
									"host": [
										"reqres",
										"in"
									],
									"path": [
										"api",
										"users"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "QUERY PARAM TAMPERING",
					"item": [
						{
							"name": "LIST USERS",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if the response code is 400 or 404\", function () {\r",
											"        pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://reqres.in/api/users?page=0",
									"protocol": "https",
									"host": [
										"reqres",
										"in"
									],
									"path": [
										"api",
										"users"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "LIST USERS-PAGE-2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if the response code is 400 or 404\", function () {\r",
											"        pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://reqres.in/api/users?page=-2",
									"protocol": "https",
									"host": [
										"reqres",
										"in"
									],
									"path": [
										"api",
										"users"
									],
									"query": [
										{
											"key": "page",
											"value": "-2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "LIST USERS-PAGE-string",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if the response code is 400 or 404\", function () {\r",
											"        pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://reqres.in/api/users?page=pavitra",
									"protocol": "https",
									"host": [
										"reqres",
										"in"
									],
									"path": [
										"api",
										"users"
									],
									"query": [
										{
											"key": "page",
											"value": "pavitra"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "END POINT TAMPERING",
					"item": [
						{
							"name": "SINGLE USER-string",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if the response code is 400 or 404\", function () {\r",
											"        pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://reqres.in/api/users/pavitra",
									"protocol": "https",
									"host": [
										"reqres",
										"in"
									],
									"path": [
										"api",
										"users",
										"pavitra"
									]
								}
							},
							"response": []
						},
						{
							"name": "SINGLE USER-empty emp id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if the response code is 400 or 404\", function () {\r",
											"        pm.expect(pm.response.code).to.be.oneOf([400, 404]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://reqres.in/api/users/ ",
									"protocol": "https",
									"host": [
										"reqres",
										"in"
									],
									"path": [
										"api",
										"users",
										" "
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "CONTENT-TYPE TAMPERING",
					"item": [
						{
							"name": "UPDATE USER-CONTENT-TYPE AS HTML",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if the response code is 400 or 415\", function () {\r",
											"        pm.expect(pm.response.code).to.be.oneOf([400, 415]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"zion resident\"\r\n}",
									"options": {
										"raw": {
											"language": "html"
										}
									}
								},
								"url": {
									"raw": "https://reqres.in/api/users/2",
									"protocol": "https",
									"host": [
										"reqres",
										"in"
									],
									"path": [
										"api",
										"users",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "UPDATE USER-CONTENT-TYPE AS XML",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if the response code is 400 or 415\", function () {\r",
											"        pm.expect(pm.response.code).to.be.oneOf([400, 415]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"zion resident\"\r\n}",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "https://reqres.in/api/users/2",
									"protocol": "https",
									"host": [
										"reqres",
										"in"
									],
									"path": [
										"api",
										"users",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "UPDATE USER-CONTENT-TYPE AS TEXT",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Verify if the response code is 400 or 415\", function () {\r",
											"        pm.expect(pm.response.code).to.be.oneOf([400, 415]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"zion resident\"\r\n}",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "https://reqres.in/api/users/2",
									"protocol": "https",
									"host": [
										"reqres",
										"in"
									],
									"path": [
										"api",
										"users",
										"2"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}