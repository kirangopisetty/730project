{
	"info": {
		"_postman_id": "92964cf0-a691-4f2b-bdfd-7609de179b3c",
		"name": "PERFORMANCE/LOAD TEST",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5040522"
	},
	"item": [
		{
			"name": "XML-API",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify if the response code received from server is 2XX [Success]\", function () {\r",
							"        pm.response.to.be.success;\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if the response code received from server is not 4XX [client side error]\", function () {\r",
							"        pm.response.to.not.be.clientError;\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if the response code received from server is not 5XX [server side error]\", function () {\r",
							"        pm.response.to.not.be.serverError;\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if the response time < 1000 ms [1 second]\", function () {\r",
							"        pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if the response body is received from the server\", function () {\r",
							"        pm.response.to.have.body;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"user-agent": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "User-Agent",
						"value": "{{$randomUserAgent}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://httpbin.org/xml",
					"protocol": "http",
					"host": [
						"httpbin",
						"org"
					],
					"path": [
						"xml"
					]
				}
			},
			"response": []
		},
		{
			"name": "TEXT-API",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify if the response code received from server is 2XX [Success]\", function () {\r",
							"        pm.response.to.be.success;\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if the response code received from server is not 4XX [client side error]\", function () {\r",
							"        pm.response.to.not.be.clientError;\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if the response code received from server is not 5XX [server side error]\", function () {\r",
							"        pm.response.to.not.be.serverError;\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if the response time < 1000 ms [1 second]\", function () {\r",
							"        pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if the response body is received from the server\", function () {\r",
							"        pm.response.to.have.body;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"user-agent": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "User-Agent",
						"value": "{{$randomUserAgent}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://httpbin.org/robots.txt",
					"protocol": "http",
					"host": [
						"httpbin",
						"org"
					],
					"path": [
						"robots.txt"
					]
				}
			},
			"response": []
		},
		{
			"name": "JSON-API",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify if the response code received from server is 2XX [Success]\", function () {\r",
							"        pm.response.to.be.success;\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if the response code received from server is not 4XX [client side error]\", function () {\r",
							"        pm.response.to.not.be.clientError;\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if the response code received from server is not 5XX [server side error]\", function () {\r",
							"        pm.response.to.not.be.serverError;\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if the response time < 1000 ms [1 second]\", function () {\r",
							"        pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if the response body is received from the server\", function () {\r",
							"        pm.response.to.have.body;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"user-agent": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "User-Agent",
						"value": "{{$randomUserAgent}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://httpbin.org/json",
					"protocol": "http",
					"host": [
						"httpbin",
						"org"
					],
					"path": [
						"json"
					]
				}
			},
			"response": []
		},
		{
			"name": "HTML-API",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify if the response code received from server is 2XX [Success]\", function () {\r",
							"        pm.response.to.be.success;\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if the response code received from server is not 4XX [client side error]\", function () {\r",
							"        pm.response.to.not.be.clientError;\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if the response code received from server is not 5XX [server side error]\", function () {\r",
							"        pm.response.to.not.be.serverError;\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if the response time < 1000 ms [1 second]\", function () {\r",
							"        pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if the response body is received from the server\", function () {\r",
							"        pm.response.to.have.body;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"user-agent": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "User-Agent",
						"value": "{{$randomUserAgent}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://httpbin.org/html",
					"protocol": "http",
					"host": [
						"httpbin",
						"org"
					],
					"path": [
						"html"
					]
				}
			},
			"response": []
		}
	]
}